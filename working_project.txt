---
title: "try4"
output: html_document
---

Synopsis:  This exercise will quantify how well six subjects did in areas taken from accelerometers on the belt, forearm, arm and dumbell by using a model to predict the manner in which the subjects did the exercise.  

Description of how model was built:

Description of how cross validation is used:

Expectation of the out-of-sample error:

What were the reasons for the choices made?

```{r data_import, echo=FALSE}
if (!file.exists("pml-training.csv")) {
  download.file("http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv", 
                destfile = "pml-training.csv")
}
if (!file.exists("pml-testing.csv")) {
  download.file("http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv", 
                destfile = "pml-testing.csv")
}
```

```{r read_data_without_NAs}
pmlTrainingSet <- read.csv("pml-training.csv", header = TRUE, sep = ",",na.strings=c('NA','','#DIV/0!'))
pmlTestingSet <- read.csv("pml-testing.csv", header = TRUE, sep = ",",na.strings=c('NA','','#DIV/0!'))
# summary(pmlTrainingSet)
```

```{r check_libraries,echo=FALSE}
# Check to see if all the packages that are needed are installed and loaded.
# If they aren't installed and/or loaded, load them. As it is not part of the overall model, code will not be revealed here.
require(caret)
pkgTest <- function(x)
{
  if (!require(x,character.only = TRUE))
  {
    install.packages(x,dependencies = TRUE)
       if(!require(x,character.only = TRUE)) stop("Package not found")
  }
}
library(caret) 
```

We will split the training data into smaller parts (partition) so that we can create our model without having to touch the test data.  

```{r partition_pmlTrainingSet}
# Set the seed for reproducibility
set.seed(10)
inTrain <- createDataPartition(y=pmlTrainingSet$classe, p=0.60, list=FALSE) 
pmlTrainingSet1 <- pmlTrainingSet[inTrain, ] 
pmlTrainingSet2 <- pmlTrainingSet[-inTrain, ] # Whatever is left from pmlTrainingSet1
```

Before we can run a model we need to remove all empty or error values from data, or our model will fail.  

```{r rm_columns_with_mostlyNAs}
naMeanGT95 <- sapply(pmlTrainingSet1, function(x) mean(is.na(x))) > 0.95 
pmlTrainingSet1 <- pmlTrainingSet1[, naMeanGT95==F] 
```

```{r nearZeroVariation}
nzv <- nearZeroVar(pmlTrainingSet1) 
pmlTrainingSet1 <- pmlTrainingSet1[, -nzv] 
```

```{r remove_unnesessary_columns}
pmlTrainingSet1 <- pmlTrainingSet1[, -(1:7)] 
```

Are there any weird behaviours?

```{r check_for_weird_behaviour}
# center every variable and scale every variable
preObj <- preProcess(pmlTrainingSet1,method=c("center","scale"))
preObj
```

There is only one column with non numeric values, which it ignored.  

```{r fit_model}
#modelFit <- train(classe ~.,data=pmlTrainingSet1,preProcess=c("center","scale"),method="glm")
modelFit <- train(pmlTrainingSet1$classe ~ ., data=pmlTrainingSet1, method="rpart")
print(modelFit, digits=3)
```

```{r sample_featurePlot}
# Plot first 4 columns in scatter plot to show relationships
plot1 <- featurePlot(x=pmlTrainingSet1[,c(1:4)],y=pmlTrainingSet1$classe,plot="pairs")
plot1
```

```{r sample_qplot}
# Plot sample to see corrolation
plot2 <- qplot(accel_forearm_y,total_accel_forearm,data=pmlTrainingSet1, colour=classe)
# Add regression smoothers
plot2 + geom_smooth(method='lm',formula=y~x)
```


